function emailconsul_queue($arguments, $connection, $transaction, $id, $recipient, $jobid = none) {
    unset($connection["tls"]["peercert"]);
    $mail = $arguments["mail"];
    $fromheader = $mail->getHeader("From");
    $from = header_addresslist_extract($fromheader)[0];
    $fromaddress = envelope_address_parse($from);
    return [
        "type" => "queue",
        "time" => round(time() * 1000),
        "id" => $id,
        "recipient" => $recipient["recipient"],
        "recipientaddress" => $recipient["address"],
        "transportid" => $recipient["transportid"],
        "sender" => $transaction["sender"],
        "senderaddress" => $transaction["senderaddress"],
        "from" => $from,
        "fromaddress" => $fromaddress,
        "connection" => $connection,
        "jobid" => $jobid
    ];
}

function emailconsul_delivery($arguments, $message) {
    $arguments["action"] = $arguments["action"] ?? "SUCCESS";
    unset($arguments["attempt"]["connection"]["tls"]["peercert"]);
    $mail = MailMessage::File(File($message["file"]["modified"]));
    $fromheader = $mail->getHeader("From");
    $from = header_addresslist_extract($fromheader)[0];
    $fromaddress = envelope_address_parse($from);
    $message["from"] = $from;
    $message["fromaddress"] = $fromaddress;
    unset($message["file"]);
    return [
        "type" => "delivery",
        "time" => round(time() * 1000),
        "message" => $message,
        ...$arguments
    ];
}

function emailconsul_async($dsn, $recipient, $dsnrecipient) {
    return [
        "type" => "async",
        "time" => round(time() * 1000),
        "message" => $dsn["message"],
        "sender" => $recipient["address"],
        "transportid" => $recipient["transportid"],
        "recipient" => $dsnrecipient
    ];
}

function emailconsul_arf($arf) {
    return [
        "type" => "arf",
        "time" => round(time() * 1000),
        ...$arf
    ];
}